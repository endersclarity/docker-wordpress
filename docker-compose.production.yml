version: '3.8'

services:
  wordpress:
    image: wordpress:${WORDPRESS_VERSION:-6.4-fpm-alpine}
    container_name: wp-app-prod
    restart: unless-stopped
    environment:
      # Database configuration
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${MYSQL_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wordpress}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX:-wp_}
      
      # WordPress security keys (should be unique for production)
      WORDPRESS_AUTH_KEY: ${WORDPRESS_AUTH_KEY}
      WORDPRESS_SECURE_AUTH_KEY: ${WORDPRESS_SECURE_AUTH_KEY}
      WORDPRESS_LOGGED_IN_KEY: ${WORDPRESS_LOGGED_IN_KEY}
      WORDPRESS_NONCE_KEY: ${WORDPRESS_NONCE_KEY}
      WORDPRESS_AUTH_SALT: ${WORDPRESS_AUTH_SALT}
      WORDPRESS_SECURE_AUTH_SALT: ${WORDPRESS_SECURE_AUTH_SALT}
      WORDPRESS_LOGGED_IN_SALT: ${WORDPRESS_LOGGED_IN_SALT}
      WORDPRESS_NONCE_SALT: ${WORDPRESS_NONCE_SALT}
      
      # WordPress configuration
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_ENVIRONMENT_TYPE', '${WP_ENVIRONMENT_TYPE:-production}');
        define('WP_DEBUG', ${WP_DEBUG:-false});
        define('WP_DEBUG_LOG', ${WP_DEBUG_LOG:-false});
        define('WP_DEBUG_DISPLAY', ${WP_DEBUG_DISPLAY:-false});
        define('FORCE_SSL_ADMIN', ${FORCE_SSL_ADMIN:-true});
        define('WP_HOME', '${WORDPRESS_URL}');
        define('WP_SITEURL', '${WORDPRESS_URL}');
        define('DISALLOW_FILE_EDIT', ${DISALLOW_FILE_EDIT:-true});
        define('AUTOMATIC_UPDATER_DISABLED', ${AUTOMATIC_UPDATER_DISABLED:-true});
        define('WP_POST_REVISIONS', ${WP_POST_REVISIONS:-3});
        define('WP_MEMORY_LIMIT', '${WP_MEMORY_LIMIT:-256M}');
        define('WP_MAX_MEMORY_LIMIT', '${WP_MAX_MEMORY_LIMIT:-512M}');
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PASSWORD', '${REDIS_PASSWORD}');
        define('WP_CACHE', true);
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
      - ./php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wordpress_network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    user: "33:33"  # www-data user
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: wp-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wordpress}
      MYSQL_USER: ${MYSQL_USER:-wordpress}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
      - ./backup:/backup
    networks:
      - wordpress_network
    security_opt:
      - no-new-privileges:true
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --innodb-buffer-pool-size=${MYSQL_INNODB_BUFFER_POOL_SIZE:-512M}
      - --max-connections=${MYSQL_MAX_CONNECTIONS:-150}
      - --query-cache-size=0
      - --query-cache-type=0
      - --slow-query-log=1
      - --slow-query-log-file=/var/lib/mysql/slow.log
      - --long-query-time=2
      - --innodb-log-file-size=256M
      - --innodb-flush-log-at-trx-commit=2
      - --skip-name-resolve
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis cache for object caching and session storage
  redis:
    image: redis:${REDIS_VERSION:-7-alpine}
    container_name: wp-redis-prod
    restart: unless-stopped
    command: 
      - redis-server
      - --appendonly yes
      - --requirepass ${REDIS_PASSWORD}
      - --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      - --maxmemory-policy allkeys-lru
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - wordpress_network
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  search_api:
    build: 
      context: ./merlins_search
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      API_HOST: 0.0.0.0
      API_PORT: 5000
      API_DEBUG: false
      ALLOWED_ORIGINS: http://localhost:8090,${WORDPRESS_URL:-http://localhost:8090}
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW: 60
      LOG_LEVEL: INFO
    volumes:
      - ./merlins_search:/app
    networks:
      - wordpress_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - db

  nginx:
    image: nginx:${NGINX_VERSION:-alpine}
    container_name: wp-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - wordpress_data:/var/www/html:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      wordpress:
        condition: service_healthy
      search_api:
        condition: service_healthy
    networks:
      - wordpress_network
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=false"
    environment:
      NGINX_ENVSUBST_TEMPLATE_DIR: /etc/nginx/templates
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/conf.d
      DOMAIN_NAME: ${DOMAIN_NAME}
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WP_DATA_PATH:-./data/wordpress}
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MYSQL_DATA_PATH:-./data/mysql}
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_PATH:-./data/redis}

networks:
  wordpress_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    labels:
      - "com.docker.compose.project=wordpress-production"